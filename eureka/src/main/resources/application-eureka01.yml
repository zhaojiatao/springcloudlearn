server:
  port: 8101
# 指定服务名称
spring:
  application:
    name: center-eureka-server
  # spring security basic认证账户，须全局配置一致
  security:
    user:
      name: root
      password: root
  # 默认启用本地开发环境，可通过新增启动脚本中jvm参数"-Dspring.profiles.active=test"参数指定
  profiles:
    active: eureka01
# 通过eureka.client.registerWithEureka:false和fetchRegistry:false来表明自己是一个eureka server
# eureka server可以通过http://${eureka.instance.hostname}:${server.port}/eureka进行访问
eureka:
  instance:
    hostname: eureka01
#    prefer-ip-address: true # 如果使用的是hostname注册，要设置为false，否则注册不成功
    # 在这个时间内若没收到服务的下一次心跳，则将移除该instance 服务失效时间，默认值90秒
    lease-expiration-duration-in-seconds: 60
    # eureka 元数据，主要用于springboot admin服务端通过eureke注册表获取后连接并调取客户端监控数据
    metadata-map:
      user.name: ${spring.security.user.name}
      user.password: ${spring.security.user.password}
  server:
    # 关闭自我保护
    enable-self-preservation: false
    # server清理无效节点的时间间隔，默认60000毫秒，即60秒
    eviction-interval-timer-in-ms: 50000
  client:
    #是否将自己注册到Eureka Server,默认为true，由于当前就是server，故而设置成false，表明该服务不会向eureka注册自己的信息
    register-with-eureka: true
    #是否从eureka server获取注册信息，由于单节点，不需要同步其他节点数据，用false
    fetch-registry: true
    #设置服务注册中心的URL，用于client和server端交流
    serviceUrl:
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@eureka02:8102/eureka/


